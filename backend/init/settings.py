"""
Django settings for otp_2fa project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import environ
import os
import sys
from datetime import timedelta
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    DEBUG=(bool, False),
    SECRET_KEY=str,
    ALLOWED_HOSTS=(list, ['*']),
    DATABASE_ENGINE=(str, 'django.db.backends.postgresql'),
    DATABASE_USER=str,
    DATABASE_PASSWORD=str,
    DATABASE_NAME=str,
    DATABASE_PORT=(int, 5432),
    DATABASE_HOST=str,
    LOG_HANDLERS=(list, ['console']),
    LOG_LEVEL=(str, 'INFO'),
    EMAIL_BACKEND=(str, 'django.core.mail.backends.smtp.EmailBackend'),
    DEFAULT_FROM_EMAIL=str,
    EMAIL_HOST=str,
    EMAIL_HOST_USER=str,
    EMAIL_HOST_PASSWORD=str,
    EMAIL_PORT=str,
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

SECRET_KEY = env('SECRET_KEY')

DEBUG = env('DEBUG')

ALLOWED_HOSTS = env('ALLOWED_HOSTS')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 3rd
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'constance',
    'constance.backends.database',
    'django_extensions',
    'drf_spectacular',
    # Apps
    'apps.accounts.apps.AccountsConfig',
    'apps.generic.apps.GenericConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTH_USER_MODEL = 'accounts.User'

ROOT_URLCONF = 'init.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'init.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': env('DATABASE_ENGINE'),
        'USER': env('DATABASE_USER'),
        'PASSWORD': env('DATABASE_PASSWORD'),
        'NAME': env('DATABASE_NAME'),
        'PORT': env('DATABASE_PORT'),
        'HOST': env('DATABASE_HOST'),
        # 'OPTIONS': {
        #     'service': 'my_service',
        #     'passfile': '.my_pgpass',
        # },
    },
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        "OPTIONS": {
            "min_length": 6,
        },
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
    {
        'NAME': 'apps.generic.password_validators.UppercaseValidator',
    },
    {
        'NAME': 'apps.generic.password_validators.LowercaseValidator',
    },
    {
        'NAME': 'apps.generic.password_validators.SymbolValidator',
    },
]

# CONSTANCE

CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'
CONSTANCE_DATABASE_PREFIX = 'constance:otp:'

CONSTANCE_KEY_IS_TWO_FACTOR_AUTH_ACTIVE = 'IS_TWO_FACTOR_AUTH_ACTIVE'
CONSTANCE_KEY_OTP_EXPIRE_MINUTES = 'OTP_EXPIRE_MINUTES'
CONSTANCE_KEY_FRONTEND_URL = 'FRONTEND_URL'

CONSTANCE_CONFIG = {
    CONSTANCE_KEY_IS_TWO_FACTOR_AUTH_ACTIVE: (True, 'Is 2Fa active?', bool),
    CONSTANCE_KEY_OTP_EXPIRE_MINUTES: (5, 'Minutes that a 2FA code is active for a user use', int),
    CONSTANCE_KEY_FRONTEND_URL: ('http://localhost:8080', 'Url to frontend', str),
}

CONSTANCE_CONFIG_FIELDSETS = {
    'System': (CONSTANCE_KEY_FRONTEND_URL, CONSTANCE_KEY_IS_TWO_FACTOR_AUTH_ACTIVE, CONSTANCE_KEY_OTP_EXPIRE_MINUTES),
}

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-gb'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, '..', 'storage', 'static')

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, '..', 'storage', 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'EXCEPTION_HANDLER': 'apps.generic.api.api_exception_handler.custom_exception_handler',
    'DEFAULT_PAGINATION_CLASS': 'apps.generic.api.pagination.MyPageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

AUTHENTICATION_BACKENDS = [
    'apps.generic.backends.authentication_backend.EmailAuthenticate',
    'apps.generic.backends.authentication_backend.CustomModelBackend',
    # "django.contrib.auth.backends.ModelBackend",
]

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "AUTH_HEADER_TYPES": ("Bearer",),
    "USER_AUTHENTICATION_RULE": "apps.generic.backends.authentication_rules.user_authentication_rule",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=60),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=7),
    "TOKEN_OBTAIN_SERIALIZER": "apps.accounts.serializers.ObtainUserTokenSerializer",
}

DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL')

EMAIL_BACKEND = env('EMAIL_BACKEND')
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
EMAIL_PORT = env('EMAIL_PORT')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)-8s %(name)-12s %(lineno)d %(message)s',
        },
    },
    'handlers': {
        'console': {
            'level': env('LOG_LEVEL'),
            'class': 'logging.StreamHandler',
            'stream': sys.stderr,
            'formatter': 'verbose',
        },
    },
    'loggers': {
        '': {
            'propagate': True,
            'handlers': env('LOG_HANDLERS'),
            'level': env('LOG_LEVEL'),
        },
    },
}

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        },
    }
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'API Documentation',
    'DESCRIPTION': 'API Documentation. terms_of_service: https://www.google.com/policies/terms/',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'COMPONENT_SPLIT_PATCH': True,
    'COMPONENT_SPLIT_REQUEST': True,
    "SWAGGER_UI_SETTINGS": {
        "deepLinking": True,
        "persistAuthorization": True,
        "displayOperationId": True,
        "displayRequestDuration": True,
        'defaultModelsExpandDepth': -1,
        'defaultModelExpandDepth': -1
    },
}
